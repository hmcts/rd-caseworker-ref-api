server:
  port: 8095

management:
  endpoints:
    jmx:
      exposure:
        include: 'health'
    web:
      base-path: "/"
  endpoint:
    health:
      show-details: "always"

spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        order_updates: true
        order_inserts: true
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 30
          time_zone: UTC
  application:
    name: RD Caseworker Ref API
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        registration:
          oidc:
            client-id: ${IDAM_CLIENT_ID:microservicekey-rd-caseworker-ref-api}
            client-secret: ${CASEWORKER_REF_API_S2S_SECRET:}
  jackson.date-format: yyyy-MM-dd
  flyway.enabled: true
  flyway.locations: classpath:db/migration
  cache:
    cache-names: token
    caffeine:
      spec: maximumSize=50,expireAfterWrite=1m
  config:
    import: "optional:configtree:/mnt/secrets/rd/"

  ### database configuration
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5457}/${POSTGRES_DB_NAME:dbrdcaseworker}${POSTGRES_CONNECTION_OPTIONS:}
    username: ${POSTGRES_USERNAME:dbrdcaseworker}
    password: ${POSTGRES_PASSWORD:dbrdcaseworker}
    min-idle: 1
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 600000
      poolName: CWHikariCP
      maxLifetime: 1800000
      connectionTimeout: 30000
    tomcat:
      max-active: 10
      max-idle: 10
      min-idle: 2
      max-wait: 10000
      test-on-borrow: true
      test-on-connect: true
      test-on-idle: true
      validation-query: "SELECT 1"
      time-between-eviction-runs-millis: 10000
      test-while-idle: true
      test-on-return: true
      remove-abandoned: true
      remove-abandoned-timeout: 60
      log-abandoned: true
      abandon-when-percentage-full: 0

security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/readiness"
    - "/health/liveness"
    - "/actuator/**"
    - "/loggers/**"
    - "/swagger-ui.html"
    - "/swagger-resources/**"
    - "/v2/api-docs"
    - "/webjars/springfox-swagger-ui/**"
    - "/csrf"
    - "/error"
    - "/favicon.ico"
### dependency configuration
idam:
  s2s-auth:
    totp_secret: ${CASEWORKER_REF_API_S2S_SECRET:}
    microservice: rd_caseworker_ref_api
    url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
  s2s-authorised:
    services: ${CRD_S2S_AUTHORISED_SERVICES:rd_caseworker_ref_api,am_org_role_mapping_service,iac,xui_webapp}
  api.url: ${idam_url:https://idam-api.aat.platform.hmcts.net}

oidc.issuer: ${OIDC_ISSUER_URL:https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts}

environment_name: ${ENVIRONMENT_NAME:prod}

loggingComponentName: RD-Caseworker-Ref-Api
feign:
  allow:
    headers:
      - authorization
userProfUrl: ${USER_PROFILE_URL:http://rd-user-profile-api-aat.service.core-compute-aat.internal}
locationRefDataUrl: ${LOCATION_REF_DATA_URL:http://rd-location-ref-api-aat.service.core-compute-aat.internal}

crd:
  publisher:
    azure:
      service:
        bus:
          host: ${CWRD_MQ_HOST:rd-servicebus-sandbox.servicebus.windows.net}
          username: ${CWRD_MQ_USERNAME:SendAndListenSharedAccessKey}
          password: ${CASEWORKER_TOPIC_PRIMARY_SEND_LISTEN_SHARED_ACCESS_KEY:}
          topic: ${CWRD_MQ_TOPIC_NAME:rd-caseworker-topic-sandbox}
          # DO NOT SET THIS 'true' IN PRODUCTION!
          trustAllCerts: ${CWRD_MQ_TRUST_ALL_CERTS:false}
    caseWorkerDataPerMessage: ${CWRD_DATA_PER_MESSAGE:50}

excel:
  acceptableCaseWorkerHeaders: ${EXCEL_ACCEPTABLE_CW_HEADERS:First Name,Last Name,Email,Region,Region ID,Primary Base Location Name,
                    Primary Base Location ID,Secondary Location,Secondary Location ID,User type,Primary Role,Secondary Role,Service1,
                    Service1 ID,Service2,Service2 ID,Service3,Service3 ID,Service4,Service4 ID,
                    Service5,Service5 ID,Service6,Service6 ID,Service7,Service7 ID,Service8,
                    Service8 ID,IDAM Roles,Suspended}
  acceptableServiceRoleMappingHeaders: ${EXCEL_ACCEPTABLE_SERVICE_ROLE_MAPPING_HEADERS:Service ID,Role,IDAM Roles}

launchdarkly:
  sdk:
    key: ${LD_SDK_KEY:}
    environment: ${LAUNCH_DARKLY_ENV:local}
    user: rd

refresh:
  pageSize: ${REFRESH_PAGE_SIZE:20}
  sortColumn: ${REFRESH_SORT_COLUMN:caseWorkerId}
