buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.3.4")
  }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.5'
    id 'jacoco'
    id 'pmd'
    id 'com.github.ben-manes.versions' version '0.33.0'
    id "info.solidsoft.pitest" version '1.5.2'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.sonarqube' version '3.1.1'
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id "org.flywaydb.flyway" version "7.0.2"
    id 'au.com.dius.pact' version '4.1.7'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'

def versions = [
  lombok             : '1.18.12',
  gradlePitest       : '1.3.0',
  pitest             : '1.5.1',
  reformHealthStarter: '0.0.5',
  reformLogging      : '5.1.0',
  reformS2sClient    : '3.1.2',
  serenity           : '2.0.76',
  sonarPitest        : '0.5',
  springBoot         : '2.3.9.RELEASE',
  springHystrix      : '2.1.1.RELEASE',
  springfoxSwagger   : '2.9.2',
  pact_version       : '4.1.7',
  launchDarklySdk    : "5.2.2",
  restAssured        : '4.3.3',
  jackson            : '2.12.1'
]

mainClassName = 'uk.gov.hmcts.reform.cwrdapi.CaseWorkerRefApiApplication'
def jarName = 'rd-caseworker-ref-api.jar'

group = 'uk.gov.hmcts.reform.rdcaseworker'
version = '0.0.1'

sourceCompatibility = 11
targetCompatibility = 11

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.00
      }
    }
  }
}

check.dependsOn jacocoTestCoverageVerification

compileJava {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
  options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

sourceSets {

  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  functionalTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }

  pactTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/pactTest/java')
    }
    resources.srcDir file('src/pactTest/resources')
  }
}

idea {
  module {
    testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
    testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
    testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
    testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
    testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
  }
}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
  functionalTestCompile.extendsFrom testCompile
  functionalTestRuntime.extendsFrom testRuntime
  contractTestCompile.extendsFrom testCompile
  contractTestRuntime.extendsFrom testRuntime
  pactTestCompile.extendsFrom testCompile
  pactTestRuntime.extendsFrom testRuntime
}


pmd {
  toolVersion = '6.12.0'
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.functionalTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
    'category/java/errorprone.xml',
    'category/java/bestpractices.xml'
  ]
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  finalizedBy aggregate
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

  systemProperty "scenario", System.getProperty('scenario')

  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
  finalizedBy aggregate
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}

task contract(type: Test) {
  description = 'Runs the consumer Pact tests'
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  include "uk/gov/hmcts/reform/cwrdapi/**"
  systemProperty 'pact.rootDir', "pacts"
  exclude "uk/gov/hmcts/reform/cwrdapi/*ProviderTest*"
}

task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
  pactVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
  publish {
    pactDirectory = 'pacts'
    pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:9292'
    tags = ['Dev']
    version = "1.0"
  }
}

//Provider PACT tasks
task contractTest(type: Test) {
  logger.lifecycle("Runnning contract Tests")
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  exclude "uk/gov/hmcts/reform/cwrdapi/*UserProfileConsumerTest*"
}

task runProviderPactVerification(type: Test) {
  logger.lifecycle("Runs pact Tests")
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
}

runProviderPactVerification.dependsOn contractTest

runProviderPactVerification.finalizedBy pactVerify

jacoco {
  toolVersion = "0.8.5"
}

jacocoTestReport {
  executionData(test,integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

pitest {
  targetClasses = ['uk.gov.hmcts.reform.*']
  testSourceSets = [sourceSets.integrationTest, sourceSets.test]
  excludedClasses = [
    'uk.gov.hmcts.reform.cwrdapi.config.*',
    'uk.gov.hmcts.reform.cwrdapi.controller.*',
    'uk.gov.hmcts.reform.cwrdapi.CaseWorkerRefApiApplication'
  ]
  threads = 10
  enableDefaultIncrementalAnalysis = true
  historyInputLocation = 'build/reports/pitest/fastermutationtesting'
  historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
  outputFormats = ['XML', 'HTML']
  timestampedReports = true
  mutationThreshold = 70
}


project.tasks['pitest'].group = "Verification"

sonarqube {
  properties {
    property "sonar.projectName", "reform::rd-caseworker-ref-api"
    property "sonar.projectKey", "uk.gov.hmcts.reform:reform::rd-caseworker-ref-api"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/cwrdapi/config/**," +
                "src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/request/**," +
                "src/main/java/uk/gov/hmcts/reform/cwrdapi/CaseWorkerRefApiApplication.java"
  }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

repositories {

  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }

  jcenter()
}

dependencies {

  compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
  compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
  compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: versions.springHystrix
  compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.5.RELEASE'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: versions.springBoot


  compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.5'
  compile group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
  compile group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'
  compile (group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0') {
    exclude group: "com.sun.xml.bind", module: "jaxb-osgi"
    exclude group: "org.apache.sling"
  }
  compile group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'
  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.reformS2sClient

  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson
  compile group: 'io.jsonwebtoken', name: 'jjwt', version:'0.9.1'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
  compile group: 'javax.inject', name: 'javax.inject', version: '1'
  compile group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
  compile "org.springframework.boot:spring-boot-starter-oauth2-client"
  compile "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
  compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '8.20'
  implementation "io.github.openfeign:feign-httpclient:11.0"
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  compile group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'
  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.14'

  compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
  compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.13.3'

  compile group: 'com.google.guava', name: 'guava', version: '30.1-jre'
  compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
  compile group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk
  compile group:"org.yaml", name: "snakeyaml", version:"1.27"

  compile group: 'org.springframework', name: 'spring-jms', version: '5.2.9.RELEASE'
  compile group: 'org.apache.qpid', name: 'qpid-jms-client', version: '0.54.0'

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testCompile("org.hamcrest:hamcrest-junit:2.0.0.0") {
    exclude group: "org.hamcrest", module: "hamcrest-core"
    exclude group: "org.hamcrest", module: "hamcrest-library"
  }

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testCompile group: 'io.rest-assured', name: 'rest-assured-common', version: versions.restAssured

    testCompile group: 'com.h2database', name: 'h2'
    testCompile "com.github.tomakehurst:wiremock:2.19.0"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.4.6'
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

  contractTestCompile("org.junit.jupiter:junit-jupiter-api:5.6.2")
  contractTestRuntime("org.junit.jupiter:junit-jupiter-engine:5.6.2")
  contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.3.2')

  testCompile group: 'org.pitest', name: 'pitest', version: versions.pitest
  testCompile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
  testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

  testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testCompile 'io.github.openfeign:feign-jackson:10.7.0'
  testCompile group: 'com.github.mifmif', name: 'generex', version: '1.0.2'

  testCompile 'org.springframework.cloud:spring-cloud-contract-wiremock:2.2.4.RELEASE'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.14'
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  testCompile('com.opentable.components:otj-pg-embedded:0.13.3')
  testCompile group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.14'
  testCompile group: 'org.codehaus.groovy', name: 'groovy-xml', version: '2.5.14'
  testCompile group: 'org.codehaus.groovy', name: 'groovy-json', version: '2.5.14'
  testCompile group: 'org.springframework', name: 'spring-test', version: '5.2.9.RELEASE'

  compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile sourceSets.test.runtimeClasspath

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile sourceSets.test.runtimeClasspath

  contractTestCompile group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.1.7'
  contractTestCompile group: 'au.com.dius.pact.consumer', name: 'java8', version: '4.1.7'
  contractTestRuntime group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.1.7'
  contractTestRuntime group: 'au.com.dius.pact.consumer', name: 'java8', version: '4.1.7'
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'junit5', version: '4.1.7'
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'spring', version: '4.1.7'
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'junit5spring', version: '4.1.7'

  contractTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

  contractTestCompile sourceSets.main.runtimeClasspath
  contractTestCompile sourceSets.test.runtimeClasspath

  pactTestCompile sourceSets.main.runtimeClasspath
  pactTestCompile sourceSets.test.runtimeClasspath
}

dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

gradle.startParameter.continueOnFailure = true

bootJar {
  archiveName = jarName
  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
